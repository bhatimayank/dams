package com.dams.repo;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.dams.repo.models.User;
import com.dams.repo.repositories.UserRepository;


@Controller
public class DamsController {

	@GetMapping("/index")
	public String index(Model model) {
		return "index";
	}

	@GetMapping("/login")
	public String login(Model model){
		return "login";
	}

	@GetMapping("/admin")
	public String admin(Model model){
		return "admin";
	}

	@GetMapping("/resetpassword")
	public String reset(Model model){
		return "resetpassword";
	}

	@GetMapping("/dashboard")
	public String dashboard(Model model){
		return "dashboard";
	}

	
	@GetMapping("/appointment")
	public String appointment(Model model) {
		return "appointment";
	}
	
	//route to admin-doctors view
	@GetMapping("/doctors")
	public String adminDoctors(Model model) {
		return "doctors";
	}
	
	//route to admin-patients view
	@GetMapping("/patients")
	public String adminPatients(Model model) {
		return "patients";
	}
	
	//--------------user registration ---------------//
	@GetMapping("/register")
	public String register(Model model){
		return "registration";
	}
	
	
	@Autowired 
	// This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
  	private UserRepository userRepository;
	@PostMapping(path="/add-user")
	public @ResponseBody String addNewUser(@RequestParam String name,
											@RequestParam String email,
											@RequestParam String phone,
											@RequestParam String password, 
											@RequestParam String role, Model model) {
		
		System.out.println(name);
		User user = new User();
		user.setName(name);
		user.setEmail(email);
		user.setPhone(phone);
		user.setPassword(password);
		user.setRole(role);
		userRepository.save(user);
		return "login";
	}
	
	//-----------------------------------------------//
	
	@GetMapping("/demo")
	public String demo(Model model) {
		return "demo";
	}


  	@GetMapping(path="/all")
  	public @ResponseBody Iterable<User> getAllUsers() {
    		// This returns a JSON or XML with the users
    		return userRepository.findAll();
  	}

}
